#@ load("@ytt:data", "data")

#@ repo_list = [ "eirini", "eirini-staging" ]
#@ image_list = [ "eirini-controller", "event-reporter", "instance-index-env-injector", "opi", "task-reporter" ]
#@ staging_image_list = [ "downloader", "executor", "uploader" ]
#@ eirini_tag = "1.9.0"
---
resources:
- name: eirini
  type: git
  source:
    uri: git@github.com:Birdrock/eirini.git
    branch: 1.9.0-backport-stop-hardcoding-uid-2000
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))

- name: eirini-staging
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/eirini-staging.git
    branch: #@ eirini_tag
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))

- name: eirini-release
  type: github-release
  icon: github
  source:
    owner: cloudfoundry-incubator
    repository: eirini-release
    access_token: ((cf_deployment_release_bot_access_token))

#@ for img in image_list:
- name: #@ "cf-for-k8s-eirini-{}".format(img)
  type: registry-image
  source:
    repository: #@ "relintdockerhubpushbot/cf-for-k8s-eirini-{}".format(img)
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    tag: #@ eirini_tag
#@ end

#@ for img in staging_image_list:
- name: #@ "cf-for-k8s-eirini-{}".format(img)
  type: registry-image
  source:
    repository: #@ "relintdockerhubpushbot/cf-for-k8s-eirini-{}".format(img)
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    tag: #@ eirini_tag
#@ end

jobs:
#@ for repo in repo_list:
#@   if repo == "eirini":
#@     list = image_list
#@     dockerfiles_dir = "docker"
#@   elif repo == "eirini-staging":
#@     list = staging_image_list
#@     dockerfiles_dir = "image"
#@   end

#@   for img in list:
- name: #@ "build-{}".format(img)
  plan:
  - get: #@ repo
  - get: eirini-release
    trigger: true
  - task: rev-parse
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: bitnami/git
      inputs:
      - name: #@ repo
      outputs:
      - name: revision
      params:
        REPO: #@ repo
      run:
        path: /bin/bash
        args:
        - -c
        - |
          pushd ${REPO}
            git rev-parse HEAD > ../revision/revision
            git describe --tags > ../revision/tag
          popd > /dev/null
  - task: #@ "build-{}".format(img)
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: #@ repo
      - name: revision
      outputs:
      - name: image
      caches:
      - path: cache
      run:
        path: /bin/sh
        args:
        - -c
        - |
          export BUILD_ARG_GIT_SHA="$(cat revision/revision)"
          ls -R
          build

      params:
        DOCKERFILE: #@ "./{}/{}/{}/Dockerfile".format(repo, dockerfiles_dir, img)
        CONTEXT: #@ "./{}/".format(repo)
  - task: #@ "deplab-{}".format(img)
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: relintdockerhubpushbot/cf-for-k8s-deplab
      inputs:
      - name: #@ repo
      - name: image
      outputs:
      - name: deplab-image
      params:
        REPO: #@ repo
      run:
        path: /bin/sh
        args:
        - -c
        - |
          deplab --image-tar image/image.tar \
            --git ${REPO} \
            --output-tar deplab-image/image.tar
  - put: #@ "cf-for-k8s-eirini-{}".format(img)
    params:
      image: deplab-image/image.tar
#@   end
#@ end